import { mesg } from "./typedef/execution";
export declare const encodeField: (value: any) => {
    nullValue: any;
    structValue?: undefined;
    listValue?: undefined;
    numberValue?: undefined;
    boolValue?: undefined;
    stringValue?: undefined;
} | {
    structValue: {
        fields: {
            [k: string]: mesg.protobuf.IValue;
        };
    };
    nullValue?: undefined;
    listValue?: undefined;
    numberValue?: undefined;
    boolValue?: undefined;
    stringValue?: undefined;
} | {
    listValue: {
        values: any;
    };
    nullValue?: undefined;
    structValue?: undefined;
    numberValue?: undefined;
    boolValue?: undefined;
    stringValue?: undefined;
} | {
    numberValue: any;
    nullValue?: undefined;
    structValue?: undefined;
    listValue?: undefined;
    boolValue?: undefined;
    stringValue?: undefined;
} | {
    boolValue: any;
    nullValue?: undefined;
    structValue?: undefined;
    listValue?: undefined;
    numberValue?: undefined;
    stringValue?: undefined;
} | {
    stringValue: any;
    nullValue?: undefined;
    structValue?: undefined;
    listValue?: undefined;
    numberValue?: undefined;
    boolValue?: undefined;
};
export declare const encode: (data: {
    [key: string]: any;
}) => mesg.protobuf.IStruct;
export declare const decodeField: (field: mesg.protobuf.IValue) => any;
export declare const decode: (data: mesg.protobuf.IStruct) => {
    [key: string]: any;
};
