import LCDClient from './util/lcd';
import { IMsg } from './transaction';
export declare type IRunner = {
    hash: string;
    owner: string;
    instanceHash: string | null;
    address: string | null;
};
export declare type IMsgCreate = {
    owner: string;
    serviceHash: string;
    envHash: string;
};
export declare type IMsgDelete = {
    owner: string;
    hash: string;
};
export default class Runner extends LCDClient {
    createMsg(owner: string, serviceHash: string, envHash: string): IMsg<IMsgCreate>;
    deleteMsg(owner: string, hash: string): IMsg<IMsgDelete>;
    get(hash: string): Promise<IRunner>;
    list(filter?: {
        instanceHash?: string | null;
        address?: string | null;
    }): Promise<IRunner[]>;
    hash(owner: string, serviceHash: string, env: string[]): Promise<{
        runnerHash: string;
        instanceHash: string;
        envHash: string;
    }>;
    exists(hash: string): Promise<boolean>;
}
