"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lcd_1 = __importDefault(require("./util/lcd"));
var FilterPredicate;
(function (FilterPredicate) {
    FilterPredicate[FilterPredicate["Unknown"] = 0] = "Unknown";
    FilterPredicate[FilterPredicate["EQ"] = 1] = "EQ";
    FilterPredicate[FilterPredicate["GT"] = 2] = "GT";
    FilterPredicate[FilterPredicate["GTE"] = 3] = "GTE";
    FilterPredicate[FilterPredicate["LT"] = 4] = "LT";
    FilterPredicate[FilterPredicate["LTE"] = 5] = "LTE";
    FilterPredicate[FilterPredicate["CONTAINS"] = 6] = "CONTAINS";
})(FilterPredicate = exports.FilterPredicate || (exports.FilterPredicate = {}));
exports.Predicate = {
    EQ: FilterPredicate.EQ,
    GT: FilterPredicate.GT,
    GTE: FilterPredicate.GTE,
    LT: FilterPredicate.LT,
    LTE: FilterPredicate.LTE,
    CONTAINS: FilterPredicate.CONTAINS
};
class Process extends lcd_1.default {
    createMsg(owner, definition) {
        return {
            type: 'process/create',
            value: {
                owner,
                edges: definition.edges,
                name: definition.name,
                nodes: definition.nodes
            }
        };
    }
    deleteMsg(owner, hash) {
        return {
            type: 'process/delete',
            value: {
                owner,
                hash
            }
        };
    }
    get(hash) {
        return __awaiter(this, void 0, void 0, function* () {
            return (yield this.query(`/process/get/${hash}`)).result;
        });
    }
    list() {
        return __awaiter(this, void 0, void 0, function* () {
            return (yield this.query('/process/list')).result || [];
        });
    }
    exists(hash) {
        return __awaiter(this, void 0, void 0, function* () {
            return (yield this.query(`/process/exist/${hash}`)).result;
        });
    }
    hash(definition) {
        return __awaiter(this, void 0, void 0, function* () {
            return (yield this.query(`/process/hash`, definition, 'POST')).result;
        });
    }
}
exports.default = Process;
