export declare type IValueNullType = {
    type: 'mesg.types.Value_NullValue';
    value: {
        null?: 0;
    };
};
export declare type IValueStringType = {
    type: 'mesg.types.Value_StringValue';
    value: {
        string_value: string;
    };
};
export declare type IValueNumberType = {
    type: 'mesg.types.Value_NumberValue';
    value: {
        number_value: number;
    };
};
export declare type IValueBoolType = {
    type: 'mesg.types.Value_BoolValue';
    value: {
        bool_value: boolean;
    };
};
export declare type IValueListType = {
    type: "mesg.types.Value_ListValue";
    value: {
        list_value: {
            values: IValue[];
        };
    };
};
export declare type IValueMapType = {
    type: "mesg.types.Value_StructValue";
    value: {
        struct_value: IStruct[];
    };
};
export declare type IValue = {
    Kind: IValueBoolType | IValueNumberType | IValueStringType | IValueNullType | IValueListType | IValueMapType;
};
export declare type IStruct = {
    Key: string;
    Value: IValue;
};
export declare const fromValue: (value: IValueNullType | IValueStringType | IValueNumberType | IValueBoolType | IValueListType | IValueMapType) => any;
export declare const fromStruct: (object: IStruct[]) => {
    [key: string]: any;
};
export declare const toValue: (value: any) => IValueNullType | IValueStringType | IValueNumberType | IValueBoolType | IValueListType | IValueMapType;
export declare const toStruct: (object: {
    [key: string]: any;
}) => IStruct[];
