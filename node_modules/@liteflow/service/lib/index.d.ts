/// <reference types="node" />
import { EventEmitter } from 'events';
declare class Service {
    private tasks;
    private _client;
    private _token;
    constructor();
    private register;
    listenTask({ ...tasks }: Tasks): EventEmitter;
    emitEvent(event: string, data: EventData): Promise<{}>;
    private handleTaskData;
    private unaryCall;
}
interface Tasks {
    [task: string]: (inputs: TaskInputs) => TaskOutputs | Promise<TaskOutputs>;
}
interface TaskOutputs {
    [key: string]: any;
}
interface TaskInputs {
    [key: string]: any;
}
interface EventData {
    [key: string]: any;
}
export default Service;
export { Tasks, TaskInputs, };
